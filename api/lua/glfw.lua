-- glfw | GLFW 2.x
-- auto-generated api from ffi headers
local api=
  {
  ["GLFW_VERSION_MAJOR"] = { type ="value", },
  ["GLFW_VERSION_MINOR"] = { type ="value", },
  ["GLFW_VERSION_REVISION"] = { type ="value", },
  ["GLFW_RELEASE"] = { type ="value", },
  ["GLFW_PRESS"] = { type ="value", },
  ["GLFW_TRUE"] = { type ="value", },
  ["GLFW_FALSE"] = { type ="value", },
  ["GLFW_KEY_UNKNOWN"] = { type ="value", },
  ["GLFW_KEY_SPACE"] = { type ="value", },
  ["GLFW_KEY_APOSTROPHE"] = { type ="value", },
  ["GLFW_KEY_COMMA"] = { type ="value", },
  ["GLFW_KEY_MINUS"] = { type ="value", },
  ["GLFW_KEY_PERIOD"] = { type ="value", },
  ["GLFW_KEY_SLASH"] = { type ="value", },
  ["GLFW_KEY_0"] = { type ="value", },
  ["GLFW_KEY_1"] = { type ="value", },
  ["GLFW_KEY_2"] = { type ="value", },
  ["GLFW_KEY_3"] = { type ="value", },
  ["GLFW_KEY_4"] = { type ="value", },
  ["GLFW_KEY_5"] = { type ="value", },
  ["GLFW_KEY_6"] = { type ="value", },
  ["GLFW_KEY_7"] = { type ="value", },
  ["GLFW_KEY_8"] = { type ="value", },
  ["GLFW_KEY_9"] = { type ="value", },
  ["GLFW_KEY_SEMICOLON"] = { type ="value", },
  ["GLFW_KEY_EQUAL"] = { type ="value", },
  ["GLFW_KEY_A"] = { type ="value", },
  ["GLFW_KEY_B"] = { type ="value", },
  ["GLFW_KEY_C"] = { type ="value", },
  ["GLFW_KEY_D"] = { type ="value", },
  ["GLFW_KEY_E"] = { type ="value", },
  ["GLFW_KEY_F"] = { type ="value", },
  ["GLFW_KEY_G"] = { type ="value", },
  ["GLFW_KEY_H"] = { type ="value", },
  ["GLFW_KEY_I"] = { type ="value", },
  ["GLFW_KEY_J"] = { type ="value", },
  ["GLFW_KEY_K"] = { type ="value", },
  ["GLFW_KEY_L"] = { type ="value", },
  ["GLFW_KEY_M"] = { type ="value", },
  ["GLFW_KEY_N"] = { type ="value", },
  ["GLFW_KEY_O"] = { type ="value", },
  ["GLFW_KEY_P"] = { type ="value", },
  ["GLFW_KEY_Q"] = { type ="value", },
  ["GLFW_KEY_R"] = { type ="value", },
  ["GLFW_KEY_S"] = { type ="value", },
  ["GLFW_KEY_T"] = { type ="value", },
  ["GLFW_KEY_U"] = { type ="value", },
  ["GLFW_KEY_V"] = { type ="value", },
  ["GLFW_KEY_W"] = { type ="value", },
  ["GLFW_KEY_X"] = { type ="value", },
  ["GLFW_KEY_Y"] = { type ="value", },
  ["GLFW_KEY_Z"] = { type ="value", },
  ["GLFW_KEY_LEFT_BRACKET"] = { type ="value", },
  ["GLFW_KEY_BACKSLASH"] = { type ="value", },
  ["GLFW_KEY_RIGHT_BRACKET"] = { type ="value", },
  ["GLFW_KEY_GRAVE_ACCENT"] = { type ="value", },
  ["GLFW_KEY_WORLD_1"] = { type ="value", },
  ["GLFW_KEY_WORLD_2"] = { type ="value", },
  ["GLFW_KEY_SPECIAL"] = { type ="value", },
  ["GLFW_KEY_ESC"] = { type ="value", },
  ["GLFW_KEY_F1"] = { type ="value", },
  ["GLFW_KEY_F2"] = { type ="value", },
  ["GLFW_KEY_F3"] = { type ="value", },
  ["GLFW_KEY_F4"] = { type ="value", },
  ["GLFW_KEY_F5"] = { type ="value", },
  ["GLFW_KEY_F6"] = { type ="value", },
  ["GLFW_KEY_F7"] = { type ="value", },
  ["GLFW_KEY_F8"] = { type ="value", },
  ["GLFW_KEY_F9"] = { type ="value", },
  ["GLFW_KEY_F10"] = { type ="value", },
  ["GLFW_KEY_F11"] = { type ="value", },
  ["GLFW_KEY_F12"] = { type ="value", },
  ["GLFW_KEY_F13"] = { type ="value", },
  ["GLFW_KEY_F14"] = { type ="value", },
  ["GLFW_KEY_F15"] = { type ="value", },
  ["GLFW_KEY_F16"] = { type ="value", },
  ["GLFW_KEY_F17"] = { type ="value", },
  ["GLFW_KEY_F18"] = { type ="value", },
  ["GLFW_KEY_F19"] = { type ="value", },
  ["GLFW_KEY_F20"] = { type ="value", },
  ["GLFW_KEY_F21"] = { type ="value", },
  ["GLFW_KEY_F22"] = { type ="value", },
  ["GLFW_KEY_F23"] = { type ="value", },
  ["GLFW_KEY_F24"] = { type ="value", },
  ["GLFW_KEY_F25"] = { type ="value", },
  ["GLFW_KEY_UP"] = { type ="value", },
  ["GLFW_KEY_DOWN"] = { type ="value", },
  ["GLFW_KEY_LEFT"] = { type ="value", },
  ["GLFW_KEY_RIGHT"] = { type ="value", },
  ["GLFW_KEY_LSHIFT"] = { type ="value", },
  ["GLFW_KEY_RSHIFT"] = { type ="value", },
  ["GLFW_KEY_LCTRL"] = { type ="value", },
  ["GLFW_KEY_RCTRL"] = { type ="value", },
  ["GLFW_KEY_LALT"] = { type ="value", },
  ["GLFW_KEY_RALT"] = { type ="value", },
  ["GLFW_KEY_TAB"] = { type ="value", },
  ["GLFW_KEY_ENTER"] = { type ="value", },
  ["GLFW_KEY_BACKSPACE"] = { type ="value", },
  ["GLFW_KEY_INSERT"] = { type ="value", },
  ["GLFW_KEY_DEL"] = { type ="value", },
  ["GLFW_KEY_PAGEUP"] = { type ="value", },
  ["GLFW_KEY_PAGEDOWN"] = { type ="value", },
  ["GLFW_KEY_HOME"] = { type ="value", },
  ["GLFW_KEY_END"] = { type ="value", },
  ["GLFW_KEY_KP_0"] = { type ="value", },
  ["GLFW_KEY_KP_1"] = { type ="value", },
  ["GLFW_KEY_KP_2"] = { type ="value", },
  ["GLFW_KEY_KP_3"] = { type ="value", },
  ["GLFW_KEY_KP_4"] = { type ="value", },
  ["GLFW_KEY_KP_5"] = { type ="value", },
  ["GLFW_KEY_KP_6"] = { type ="value", },
  ["GLFW_KEY_KP_7"] = { type ="value", },
  ["GLFW_KEY_KP_8"] = { type ="value", },
  ["GLFW_KEY_KP_9"] = { type ="value", },
  ["GLFW_KEY_KP_DIVIDE"] = { type ="value", },
  ["GLFW_KEY_KP_MULTIPLY"] = { type ="value", },
  ["GLFW_KEY_KP_SUBTRACT"] = { type ="value", },
  ["GLFW_KEY_KP_ADD"] = { type ="value", },
  ["GLFW_KEY_KP_DECIMAL"] = { type ="value", },
  ["GLFW_KEY_KP_EQUAL"] = { type ="value", },
  ["GLFW_KEY_KP_ENTER"] = { type ="value", },
  ["GLFW_KEY_KP_NUM_LOCK"] = { type ="value", },
  ["GLFW_KEY_CAPS_LOCK"] = { type ="value", },
  ["GLFW_KEY_SCROLL_LOCK"] = { type ="value", },
  ["GLFW_KEY_PAUSE"] = { type ="value", },
  ["GLFW_KEY_LSUPER"] = { type ="value", },
  ["GLFW_KEY_RSUPER"] = { type ="value", },
  ["GLFW_KEY_MENU"] = { type ="value", },
  ["GLFW_KEY_LAST"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_1"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_2"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_3"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_4"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_5"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_6"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_7"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_8"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_LAST"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_LEFT"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_RIGHT"] = { type ="value", },
  ["GLFW_MOUSE_BUTTON_MIDDLE"] = { type ="value", },
  ["GLFW_JOYSTICK_1"] = { type ="value", },
  ["GLFW_JOYSTICK_2"] = { type ="value", },
  ["GLFW_JOYSTICK_3"] = { type ="value", },
  ["GLFW_JOYSTICK_4"] = { type ="value", },
  ["GLFW_JOYSTICK_5"] = { type ="value", },
  ["GLFW_JOYSTICK_6"] = { type ="value", },
  ["GLFW_JOYSTICK_7"] = { type ="value", },
  ["GLFW_JOYSTICK_8"] = { type ="value", },
  ["GLFW_JOYSTICK_9"] = { type ="value", },
  ["GLFW_JOYSTICK_10"] = { type ="value", },
  ["GLFW_JOYSTICK_11"] = { type ="value", },
  ["GLFW_JOYSTICK_12"] = { type ="value", },
  ["GLFW_JOYSTICK_13"] = { type ="value", },
  ["GLFW_JOYSTICK_14"] = { type ="value", },
  ["GLFW_JOYSTICK_15"] = { type ="value", },
  ["GLFW_JOYSTICK_16"] = { type ="value", },
  ["GLFW_JOYSTICK_LAST"] = { type ="value", },
  ["GLFW_WINDOW"] = { type ="value", },
  ["GLFW_FULLSCREEN"] = { type ="value", },
  ["GLFW_OPENED"] = { type ="value", },
  ["GLFW_ACTIVE"] = { type ="value", },
  ["GLFW_ICONIFIED"] = { type ="value", },
  ["GLFW_ACCELERATED"] = { type ="value", },
  ["GLFW_RED_BITS"] = { type ="value", },
  ["GLFW_GREEN_BITS"] = { type ="value", },
  ["GLFW_BLUE_BITS"] = { type ="value", },
  ["GLFW_ALPHA_BITS"] = { type ="value", },
  ["GLFW_DEPTH_BITS"] = { type ="value", },
  ["GLFW_STENCIL_BITS"] = { type ="value", },
  ["GLFW_REFRESH_RATE"] = { type ="value", },
  ["GLFW_ACCUM_RED_BITS"] = { type ="value", },
  ["GLFW_ACCUM_GREEN_BITS"] = { type ="value", },
  ["GLFW_ACCUM_BLUE_BITS"] = { type ="value", },
  ["GLFW_ACCUM_ALPHA_BITS"] = { type ="value", },
  ["GLFW_AUX_BUFFERS"] = { type ="value", },
  ["GLFW_STEREO"] = { type ="value", },
  ["GLFW_WINDOW_NO_RESIZE"] = { type ="value", },
  ["GLFW_FSAA_SAMPLES"] = { type ="value", },
  ["GLFW_OPENGL_VERSION_MAJOR"] = { type ="value", },
  ["GLFW_OPENGL_VERSION_MINOR"] = { type ="value", },
  ["GLFW_OPENGL_FORWARD_COMPAT"] = { type ="value", },
  ["GLFW_OPENGL_DEBUG_CONTEXT"] = { type ="value", },
  ["GLFW_OPENGL_PROFILE"] = { type ="value", },
  ["GLFW_OPENGL_CORE_PROFILE"] = { type ="value", },
  ["GLFW_OPENGL_COMPAT_PROFILE"] = { type ="value", },
  ["GLFW_MOUSE_CURSOR"] = { type ="value", },
  ["GLFW_STICKY_KEYS"] = { type ="value", },
  ["GLFW_STICKY_MOUSE_BUTTONS"] = { type ="value", },
  ["GLFW_SYSTEM_KEYS"] = { type ="value", },
  ["GLFW_KEY_REPEAT"] = { type ="value", },
  ["GLFW_AUTO_POLL_EVENTS"] = { type ="value", },
  ["GLFW_WAIT"] = { type ="value", },
  ["GLFW_NOWAIT"] = { type ="value", },
  ["GLFW_PRESENT"] = { type ="value", },
  ["GLFW_AXES"] = { type ="value", },
  ["GLFW_BUTTONS"] = { type ="value", },
  ["GLFW_NO_RESCALE_BIT"] = { type ="value", },
  ["GLFW_ORIGIN_UL_BIT"] = { type ="value", },
  ["GLFW_BUILD_MIPMAPS_BIT"] = { type ="value", },
  ["GLFW_ALPHA_MAP_BIT"] = { type ="value", },
  ["glfwInit"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(void)", },
  ["glfwTerminate"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwGetVersion"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int *major, int *minor, int *rev)", },
  ["glfwOpenWindow"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int width, int height, int redbits, int greenbits, int bluebits, int alphabits, int depthbits, int stencilbits, int mode)", },
  ["glfwOpenWindowHint"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int target, int hint)", },
  ["glfwCloseWindow"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwSetWindowTitle"] = { type ="function",
    description = "",
    returns = "()",
    args = "(const char *title)", },
  ["glfwGetWindowSize"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int *width, int *height)", },
  ["glfwSetWindowSize"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int width, int height)", },
  ["glfwSetWindowPos"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int x, int y)", },
  ["glfwIconifyWindow"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwRestoreWindow"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwSwapBuffers"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwSwapInterval"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int interval)", },
  ["glfwGetWindowParam"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int param)", },
  ["glfwSetWindowSizeCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWwindowsizefun cbfun)", },
  ["glfwSetWindowCloseCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWwindowclosefun cbfun)", },
  ["glfwSetWindowRefreshCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWwindowrefreshfun cbfun)", },
  ["glfwGetVideoModes"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(GLFWvidmode *list, int maxcount)", },
  ["glfwGetDesktopMode"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWvidmode *mode)", },
  ["glfwPollEvents"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwWaitEvents"] = { type ="function",
    description = "",
    returns = "()",
    args = "(void)", },
  ["glfwGetKey"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int key)", },
  ["glfwGetMouseButton"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int button)", },
  ["glfwGetMousePos"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int *xpos, int *ypos)", },
  ["glfwSetMousePos"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int xpos, int ypos)", },
  ["glfwGetMouseWheel"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(void)", },
  ["glfwSetMouseWheel"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int pos)", },
  ["glfwSetKeyCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWkeyfun cbfun)", },
  ["glfwSetCharCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWcharfun cbfun)", },
  ["glfwSetMouseButtonCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmousebuttonfun cbfun)", },
  ["glfwSetMousePosCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmouseposfun cbfun)", },
  ["glfwSetMouseWheelCallback"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmousewheelfun cbfun)", },
  ["glfwGetJoystickParam"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int joy, int param)", },
  ["glfwGetJoystickPos"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int joy, float *pos, int numaxes)", },
  ["glfwGetJoystickButtons"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(int joy, unsigned char *buttons, int numbuttons)", },
  ["glfwGetTime"] = { type ="function",
    description = "",
    returns = "(double)",
    args = "(void)", },
  ["glfwSetTime"] = { type ="function",
    description = "",
    returns = "()",
    args = "(double time)", },
  ["glfwSleep"] = { type ="function",
    description = "",
    returns = "()",
    args = "(double time)", },
  ["glfwExtensionSupported"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(const char *extension)", },
  ["glfwGetProcAddress"] = { type ="function",
    description = "",
    returns = "(void*)",
    args = "(const char *procname)", },
  ["glfwGetGLVersion"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int *major, int *minor, int *rev)", },
  ["glfwCreateThread"] = { type ="function",
    description = "",
    returns = "(GLFWthread)",
    args = "(GLFWthreadfun fun, void *arg)", },
  ["glfwDestroyThread"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWthread ID)", },
  ["glfwWaitThread"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(GLFWthread ID, int waitmode)", },
  ["glfwGetThreadID"] = { type ="function",
    description = "",
    returns = "(GLFWthread)",
    args = "(void)", },
  ["glfwCreateMutex"] = { type ="function",
    description = "",
    returns = "(GLFWmutex)",
    args = "(void)", },
  ["glfwDestroyMutex"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmutex mutex)", },
  ["glfwLockMutex"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmutex mutex)", },
  ["glfwUnlockMutex"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWmutex mutex)", },
  ["glfwCreateCond"] = { type ="function",
    description = "",
    returns = "(GLFWcond)",
    args = "(void)", },
  ["glfwDestroyCond"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWcond cond)", },
  ["glfwWaitCond"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWcond cond, GLFWmutex mutex, double timeout)", },
  ["glfwSignalCond"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWcond cond)", },
  ["glfwBroadcastCond"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWcond cond)", },
  ["glfwGetNumberOfProcessors"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(void)", },
  ["glfwEnable"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int token)", },
  ["glfwDisable"] = { type ="function",
    description = "",
    returns = "()",
    args = "(int token)", },
  ["glfwReadImage"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(const char *name, GLFWimage *img, int flags)", },
  ["glfwReadMemoryImage"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(const void *data, long size, GLFWimage *img, int flags)", },
  ["glfwFreeImage"] = { type ="function",
    description = "",
    returns = "()",
    args = "(GLFWimage *img)", },
  ["glfwLoadTexture2D"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(const char *name, int flags)", },
  ["glfwLoadMemoryTexture2D"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(const void *data, long size, int flags)", },
  ["glfwLoadTextureImage2D"] = { type ="function",
    description = "",
    returns = "(int)",
    args = "(GLFWimage *img, int flags)", },
  ["GLFWvidmode"] = { type ="class",
    description = "",
    childs =
    {
    ["Width"] = { type ="value", description = "int", },
    ["Height"] = { type ="value", description = "int", },
    ["RedBits"] = { type ="value", description = "int", },
    ["BlueBits"] = { type ="value", description = "int", },
    ["GreenBits"] = { type ="value", description = "int", },
    } },
  ["GLFWimage"] = { type ="class",
    description = "",
    childs =
    {
    ["Width"] = { type ="value", description = "int", },
    ["Height"] = { type ="value", description = "int", },
    ["Format"] = { type ="value", description = "int", },
    ["BytesPerPixel"] = { type ="value", description = "int", },
    } },
  }

return {
  glfw = {
    type = "lib",
    description = "GLFW window manager",
    childs = api,
  },
}
